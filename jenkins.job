//this i a template for a cumulative job that will provision all roles
pipeline {
   agent any
   
    parameters {
        string(defaultValue: "prod", description: 'What environment?', name: 'env')
        // 
        string(defaultValue: "localhost,localhost", description: 'which server will run the elastic search role?', name: 'elastic_server_names')
        // 
        string(defaultValue: "localhost,localhost", description: 'which server will run the foundation services role?', name: 'foundation_server_names')
        // 
        string(defaultValue: "localhost,localhost", description: 'which server will run the liquibase role?', name: 'liquibase_server_names')
        // 
        string(defaultValue: "r1jboss", description: 'which user will run the job?', name: 'sys_exc_user')
        // 
        string(defaultValue: "201705", description: 'which version to install?', name: 'ver')
        // choices are newline separated
        choice(choices: 'Liquibase Update CMDB\nLiquibase Update CMDB_INB\nLiquibase Update CMDB_OUB\nElastic search cluster setup\nElastic search publish templates\nFoundation service provision\nLifeRay Portal provisiion\nElastic search index maintance', description: 'What stage to fail?', name: 'failStage')
        // choices are newline separated
        choice(choices: 'No\nYes', description: 'should the elastic search indexing stage be ommited?', name: 'SkipElasticIndex')
        // 
        string(defaultValue: "jenkins||jenkins", description: 'which node label to use for the elastic search stages?', name: 'elasticlabel')

    }


   stages{
     
       stage('Liquibase Update CMDB'){
           agent { label 'jenkins'  }
           steps{
                script{    
                    def role="elasticsearch_install"       
                    echo 'Liquibase Update CMDB'
                    sshagent(['svc_sysexc_cd']) {
                          echo 'Attention!!!'
                          sh '''
                          /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
	                                   -o StrictHostKeyChecking=no \
                                        ${sys_exc_user}@localhost "whoami"
                          '''              
                        }//sshagent

                }//script
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       

       stage('Liquibase Update CMDB_INB'){
           agent { label 'jenkins'  }
           steps{
             
                    script{
                        echo 'Liquibase Update CMDB_INB'
                        sshagent(['svc_sysexc_cd']) {
                          echo 'Attention!!!'
                          sh '''
                          /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
	                                   -o StrictHostKeyChecking=no \
                                        ${sys_exc_user}@localhost "whoami"
                          '''              
                        }//sshagent
                   }//script
           
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       stage('Liquibase Update CMDB_OUB'){
           agent { label 'jenkins'  }
           steps{
             
                    script{
                        echo 'Liquibase Update CMDB_OUB'
                        sshagent(['svc_sysexc_cd']) {
                          echo 'Attention!!!'
                          sh '''
                          /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
	                                   -o StrictHostKeyChecking=no \
                                        ${sys_exc_user}@localhost "whoami"
                          '''                                        
                        }//sshagent
               }//script
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       stage('Elastic search cluster setup'){
           agent { label 'jenkins'  }
           environment { 
                    role = 'elasticsearch_install'
            }           
           steps{
            script {
             //def role="elasticsearch_install" 
             sshagent(['svc_sysexc_cd']) {              
               echo '......'
               //echo "${role}" 
               echo 'Elastic search provision'
               //git branch: '*/master', changelog: false, credentialsId: 'svc_sysexc_cd', poll: false, url: 'ssh://bitbucket.tools.adidas-group.com/gpc/systemexcellence.git'
               sh '''
                 IFS="," read -r -a servers <<< "${elastic_server_names}"
                 ls -l
                 export index=1          
                 for node in "${servers[@]}"
                 do 
            	    #copy bootstrap in the servers
                    echo scp -o UserKnownHostsFile=/dev/null \
                             -o StrictHostKeyChecking=no \
                             shell/bootstrap.sh ${sys_exc_user}@${node}:/tmp/bootstrap.sh
                    #add execution permission
                    echo ssh -o UserKnownHostsFile=/dev/null \
	                         -o StrictHostKeyChecking=no \
                              ${sys_exc_user}@${node} "sudo chmod +x /tmp/bootstrap.sh"
                   #install 
	               echo "Installing Liferay portal in ${node}"
	               echo ssh -o UserKnownHostsFile=/dev/null \
	                        -o StrictHostKeyChecking=no \
                            ${sys_exc_user}@${node} "sudo /tmp/bootstrap.sh -r ${role} -a ${ver} -e ${env} -n ${node} -d || if [ "$?" == 2 ]; then continue; else if [ "$?" == 0 ]; then continue; else exit 1; fi; fi;" 
                   num=1
                   export index=$((index + num))
                 done
               '''
             }//sshagent
            }//script
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       stage('Elastic search publish templates'){
           agent { label 'jenkins'  }
           steps{
               script{
                   sshagent(['svc_sysexc_cd']) {
                   echo 'Elastic search publish templates'
                   echo 'Attention!!!'
                   sh '''
                      /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
                                   -o StrictHostKeyChecking=no \
                                   ${sys_exc_user}@localhost "whoami"
                      '''              
                   sh 'hostname'
                   }//sshagent
               }//script
            }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       stage('Foundation service provision'){
           agent { label 'jenkins'  }           
           steps{
               script{
                   sshagent(['svc_sysexc_cd']) {
                   echo 'Foundation service provision'
                   echo 'Attention!!!'
                   sh '''
                      /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
                                   -o StrictHostKeyChecking=no \
                                   ${sys_exc_user}@localhost "whoami"
                      '''              
                }//sshagent
               }//script           
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       stage ('LifeRay Portal provisiion'){
           agent { label 'jenkins' }    
           steps{
               script{
                   sshagent(['svc_sysexc_cd']) {
                   echo 'LifeRay Portal provisiion'
                   echo 'Attention!!!'
                   sh '''
                      /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
                                   -o StrictHostKeyChecking=no \
                                   ${sys_exc_user}@localhost "whoami"
                      '''              
                }//sshagent
               }//script
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
       stage('Elastic search index maintance'){
           agent { label 'jenkins'}                      
           steps{
               script{
                   echo "flag: ${params.SkipElasticIndex}"
                   if (params.SkipElasticIndex=="No"){
                      sshagent(['svc_sysexc_cd']) {
                      echo 'Elastic search index maintance'
                      echo 'Attention!!!'
                      sh '''
                         /usr/bin/ssh -o UserKnownHostsFile=/dev/null \
                                      -o StrictHostKeyChecking=no \
                                      ${sys_exc_user}@localhost "whoami"
                      '''              
                   }//sshagent
               } else {
                   echo 'Omiting the index maintance phase'
               }//if
               }//script
           }//steps
           post { 
             failure { 
                echo 'it happens!'
             }//failure
           }//post        
       }//stage
    
   }//stages
}//pipeline


